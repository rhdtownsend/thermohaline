#:include 'forum.inc'

module params_m

   ! Uses

   use forum_m

   use finger_m

   use ISO_FORTRAN_ENV

   ! No implicit typing

   implicit none

   ! Derived-type definitions

   type params_t
      real(RD) :: R0  ! Density ratio
      real(RD) :: Pr  ! Prandtl number
      real(RD) :: tau ! Inverse Lewis number
      real(RD) :: H_B ! Lorentz-force strength
      real(RD) :: D_B ! Resistive diffusivity ratio
      real(RD) :: w_f ! Vertical velocity amplitude
      real(RD) :: k_z ! Vertical wavenumber
      real(RD) :: lam ! Fingering mode growth rate
      real(RD) :: l_f ! Fingering mode horizontal wavenumber
   end type params_t

   ! Interfaces

   interface params_t
      module procedure params_t_
   end interface params_t

   ! Access specifiers

   private

   public :: params_t
   public :: solve_finger

contains

   function params_t_(R0, Pr, tau, H_B, D_B, w_f, k_z) result(pa)

      real(RD), intent(in) :: R0
      real(RD), intent(in) :: Pr
      real(RD), intent(in) :: tau
      real(RD), intent(in) :: H_B
      real(RD), intent(in) :: D_B
      real(RD), intent(in) :: w_f
      real(RD), intent(in) :: k_z
      type(params_t)       :: pa

      ! Store parameters

      pa%R0 = R0
      pa%Pr = Pr
      pa%tau = tau

      pa%H_B = H_B
      pa%D_B = D_B

      pa%w_f = w_f
      pa%k_z = k_z

      ! Solve for the fingering-mode properties

      call solve_finger(R0, Pr, tau, pa%lam, pa%l_f)

   end function params_t_

   !****

   subroutine solve_finger(R0, Pr, tau, lam, l_f)

      real(RD), intent(in) :: R0
      real(RD), intent(in) :: Pr
      real(RD), intent(in) :: tau
      real(RD), intent(in) :: l_f

      real(RD) :: a0
      real(RD) :: a1
      real(RD) :: a2
      real(RD) :: a3
      real(RD) :: p
      real(RD) :: q
      real(RD) :: tlam

      ! Solve for thegrowth rate lam and horizontal wavenumber of the
      ! fastest-growin fingering mode

      a3 = Pr*(1-R0) + tau - R0
      a2 = -2*(R0-1)*(Pr + tau + Pr*tau)
      a1 = Pr + tau - 4*Pr*(R0-1)*tau - (1+Pr)*R0*tau**2
      a0 = -2*Pr*tau*(R0*tau-1)

      p = a1*a2/(6*a3**2) - a0/(2*a3) - (a2/(3*a3))**3
      q = (a2/(3*a3))**2 - a1/(3*a3)

      tlam = 2*SQRT(q)*COS(ACOS(p/SQRT(q)**3)/3) - a2/(3*a3)

      l_f = (Pr*(1 + tlam - R0*(tau+tlam))/(R0*(1+tlam)*(Pr+tlam)*(tau+tlam)))**0.25

      lam_f = l_f**2*tlam

   end subroutine solve_finger

end module params_m


